<?php

namespace App\Filament\Resources;

use App\Filament\Resources\DocumentoResource\Pages;
use App\Models\Documento;
use App\Models\CategoriaDocumento;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Filament\Forms\Components\Section;
use Illuminate\Support\Facades\Storage;

class DocumentoResource extends Resource
{
    protected static ?string $model = Documento::class;
    protected static ?string $navigationIcon = 'heroicon-o-document-text';
    protected static ?string $navigationLabel = 'Documenti';
    protected static ?int $navigationSort = 3;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make('Informazioni Documento')
                    ->schema([
                        Forms\Components\TextInput::make('nome')
                            ->label('Nome Documento')
                            ->required()
                            ->maxLength(255),
                            
                        Forms\Components\Select::make('categoria_id')
                            ->label('Categoria')
                            ->options(CategoriaDocumento::attive()->pluck('nome', 'id'))
                            ->required()
                            ->preload(),
                            
                        Forms\Components\Textarea::make('descrizione')
                            ->maxLength(65535)
                            ->columnSpanFull(),
                            
                        Forms\Components\DatePicker::make('data_documento')
                            ->label('Data Documento')
                            ->default(now()),
                            
                        Forms\Components\DatePicker::make('data_scadenza')
                            ->label('Data Scadenza'),
                            
                        Forms\Components\Toggle::make('importante')
                            ->label('Documento Importante')
                            ->helperText('I documenti importanti sono evidenziati'),
                            
                        Forms\Components\Toggle::make('interno')
                            ->label('Solo per Manager/Admin')
                            ->default(false),
                    ])
                    ->columns(2),
                    
                Section::make('File')
                    ->schema([
                        Forms\Components\FileUpload::make('file_path')
                            ->label('File Documento')
                            ->directory('documenti')
                            ->acceptedFileTypes([
                                'application/pdf',
                                'image/*',
                                'application/msword',
                                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                                'application/vnd.ms-excel',
                                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                            ])
                            ->maxSize(20480)
                            ->required()
                            ->downloadable()
                            ->openable()
                            ->afterStateUpdated(function ($state, $set) {
                                if ($state) {
                                    $path = Storage::path($state);
                                    if (file_exists($path)) {
                                        $set('dimensione', filesize($path));
                                        $set('hash_sha256', hash_file('sha256', $path));
                                        $set('mime_type', mime_content_type($path));
                                        $set('file_originale', basename($state));
                                    }
                                }
                            }),
                            
                        Forms\Components\Hidden::make('caricato_da')
                            ->default(auth()->id()),
                        Forms\Components\Hidden::make('dimensione'),
                        Forms\Components\Hidden::make('hash_sha256'),
                        Forms\Components\Hidden::make('mime_type'),
                        Forms\Components\Hidden::make('file_originale'),
                        Forms\Components\Hidden::make('documentabile_type')
                            ->default('App\Models\User'),
                        Forms\Components\Hidden::make('documentabile_id')
                            ->default(auth()->id()),
                    ]),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('nome')
                    ->searchable()
                    ->sortable()
                    ->weight('bold'),
                    
                Tables\Columns\TextColumn::make('categoria.nome')
                    ->label('Categoria')
                    ->badge()
                    ->color(fn ($record) => $record->categoria->colore ?? 'gray'),
                    
                Tables\Columns\TextColumn::make('data_documento')
                    ->date('d/m/Y')
                    ->sortable(),
                    
                Tables\Columns\TextColumn::make('data_scadenza')
                    ->date('d/m/Y')
                    ->sortable()
                    ->color(function ($record) {
                        if (!$record->data_scadenza) return null;
                        if ($record->isScaduto) return 'danger';
                        if ($record->giorni_alla_scadenza <= 30) return 'warning';
                        return null;
                    }),
                    
                Tables\Columns\IconColumn::make('importante')
                    ->boolean()
                    ->trueIcon('heroicon-o-star')
                    ->falseIcon('heroicon-o-star')
                    ->trueColor('warning')
                    ->falseColor('gray'),
                    
                Tables\Columns\IconColumn::make('interno')
                    ->boolean()
                    ->label('Riservato')
                    ->trueIcon('heroicon-o-lock-closed')
                    ->falseIcon('heroicon-o-lock-open'),
                    
                Tables\Columns\TextColumn::make('dimensione_file_umana')
                    ->label('Dimensione'),
                    
                Tables\Columns\TextColumn::make('created_at')
                    ->label('Caricato il')
                    ->dateTime('d/m/Y H:i')
                    ->sortable(),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('categoria_id')
                    ->label('Categoria')
                    ->options(CategoriaDocumento::attive()->pluck('nome', 'id')),
                    
                Tables\Filters\TernaryFilter::make('importante')
                    ->label('Importanti'),
                    
                Tables\Filters\TernaryFilter::make('interno')
                    ->label('Riservati'),
                    
                Tables\Filters\Filter::make('scaduti')
                    ->label('Scaduti')
                    ->query(fn (Builder $query): Builder => $query->scaduti()),
                    
                Tables\Filters\Filter::make('in_scadenza')
                    ->label('In scadenza (30gg)')
                    ->query(fn (Builder $query): Builder => $query->inScadenza()),
            ])
            ->actions([
                Tables\Actions\Action::make('download')
                    ->label('Download')
                    ->icon('heroicon-o-arrow-down-tray')
                    ->action(function ($record) {
                        $path = storage_path('app/' . $record->file_path);
                        
                        if (file_exists($path)) {
                            return response()->download(
                                $path,
                                $record->file_originale ?? $record->nome
                            );
                        } else {
                            \Filament\Notifications\Notification::make()
                                ->title('File non trovato')
                                ->body('Il file richiesto non esiste sul server.')
                                ->danger()
                                ->send();
                                
                            return null;
                        }
                    }),
                    
                Tables\Actions\Action::make('verifica')
                    ->label('Verifica')
                    ->icon('heroicon-o-shield-check')
                    ->action(function ($record) {
                        if ($record->verificaIntegrita()) {
                            \Filament\Notifications\Notification::make()
                                ->title('Documento integro')
                                ->success()
                                ->send();
                        } else {
                            \Filament\Notifications\Notification::make()
                                ->title('Attenzione: il documento potrebbe essere stato modificato')
                                ->danger()
                                ->send();
                        }
                    }),
                    
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('created_at', 'desc');
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListDocumentos::route('/'),
            'create' => Pages\CreateDocumento::route('/create'),
            'edit' => Pages\EditDocumento::route('/{record}/edit'),
        ];
    }
}
